q()
install.packages('tidyverse')
install.packages('shiny')
install.packages('lubridate')
install
install.packages('ggalt')
install.packages('formattable')
install.packages('readr')
install.packages('readxl')
install.packages('xlsx')
library(xlsx)
install.packages('rJava')
library(eph)
library(tidyverse)
library(eph)
base_individual <- get_microdata(year = 2018:2019,
trimester = 1,
type='individual',
vars = c('PONDERA','ESTADO','CAT_OCUP'))
View(base_individual)
paste(df_grupo_,i)
paste('df_grupo_',i)
for (i in 1:32){
paste('df_grupo_',i)
}
for (i in 1:32){
print( paste('df_grupo_',i))
}
for (i in 1:32){
print( paste0('df_grupo_',i))
}
mi_lista
x <- c(45, 12, 56, 14, 16)
y <- c("Coche", "Bicicleta")
z <- matrix(1:12, ncol = 4)
# Creando una lista
mi_lista <- list(x, y, z)
mi_lista
x <- as.data.frame(c(45, 12, 56, 14, 16))
y <- as.data.frame(c("Coche", "Bicicleta"))
z <- as.data.frame(matrix(1:12, ncol = 4))
# Creando una lista
mi_lista <- list(x, y, z)
mi_lista
for (i in 1:10){
grupo_i<- grupo_1+1
}
f<-c()
for (i in 1:10){
f[i]<-paste0('grupo_',i)
}
iris
for (i in 1:10){
f[i]<- iris
}
paste0('grupo_',i)<- iris
for (i in 1:10){
paste0('grupo_',i)<- iris
}
for (i in 1:10){
grupo_i<- iris
}
for (i in 1:10){
f<-paste0('grupo_',i)
f<- iris
}
for (i in 1:10){
f<-paste0('grupo_',i)
f <- iris
}
View(f)
f<-[]
f<-c()
for (i in 1:10){
f<-paste0('grupo_',i)
}
f[1]
f[2]
f<-c()
for (i in 1:10){
f[i]<-paste0('grupo_',i)
}
f[i]
f[2]
for (i in 1:10){
f [i]<- iris
}
rename(f)
f<- iris
f
f<- as.data.frame(iris)
f
assign(  'hola', f )
for (i in 1:10){
f <- iris
assign(paste0('grupo_',i),f)
}
rm(list=ls())
for (i in 1:10){
f <- iris
assign(paste0('grupo_',i),f)
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gplots)
library(FactoMineR)  #Analisis de correspondencia
library(factoextra)
library(tidyverse)
library(gmodels)
library(sjPlot) # tabla cruzada
library(corrplot)
library(DescTools)
#install.packages('DescTools')
datos<-readxl::read_excel(file.choose())
datos$Satisfaccion_cat <- CutQ(datos$Satisfaccion,labels = c('Bajo','Medio','Medio','Alto'),breaks = 4)
datos$Ultima_Evaluacion_cat <- CutQ(datos$Ultima_Evaluacion,labels = c('Bajo','Medio','Medio','Alto'),breaks = 4)
datos_cat <- datos %>% select(-c('Satisfaccion','Ultima_Evaluacion'))
datos_gan <- MCA(datos_cat,  graph = FALSE)
print(clientes.mca)
print(datos_gan)
datos_ind <- datos_gan$ind$coord
datos_ind
datos_var <- datos_ind$var$contrib
datos_var <- datos_cat$var$contrib
datos_var <- datos_cat$var$contrib
datos_var <- datos_gan$var$contrib
datos_var
# autovalores
datos_gan[[1]]
fviz_eig(datos_gan)
fviz_screeplot(datos_gan)
fviz_eig(datos_gan)
get_mca_var(datos_gan)
fviz_mca_ind(datos_gan)
fviz_contrib(datos_gan, choice ="var", axes = 1)
fviz_contrib(datos_gan, choice ="var", axes = 2)
datos_gan$var$contrib
rowSums(datos_gan$var$contrib)
colSums(datos_gan$var$contrib)
rowSums(datos_gan$var$contrib)
fviz_mca_biplot(datos_gan,geom.var = NULL)
fviz_mca_biplot(datos_gan)
fviz_mca_biplot(datos_gan,invisible = "var")
fviz_mca_biplot(datos_gan,invisible = "ind")
fviz_mca_biplot(datos_gan,invisible = "ind",repel = TRUE)
# Relacion entre numero de proyectos y horas  promedio por mes
sjt.xtab(datos$churn, datos$Horas_promedio_mes, show.row.prc = TRUE,
show.col.prc = TRUE,  show.exp = T,tdcol.expected = "#ff0000")
sjt.xtab(ddatos$churn, datos$Numero_proyectos, show.row.prc = TRUE,
show.col.prc = TRUE,  show.exp = T,tdcol.expected = "#ff0000")
sjt.xtab(datos_cat$churn, datos_cat$Numero_proyectos, show.row.prc = TRUE,
show.col.prc = TRUE,  show.exp = T,tdcol.expected = "#ff0000")
fviz_contrib(datos_gan, choice ="var", axes = 1)
fviz_contrib(datos_gan, choice ="var", axes = 2)
print(datos_gan)
fviz_contrib(datos_gan, choice = "var", axes = 1:2, top = 15)
head(datos_gan$cos2)
ind <- get_mca_ind(datos_gan)
head(datos_gan$cos2)
head(ind$cos2)
head(datos_gan$var$cos2, 4)
head(datos_gan$var$cos2, n = 10)
datos_cat %>% select(churn,Ultima_Evaluacion_cat,Numero_proyectos,Satisfaccion_cat,Horas_promedio_mes,Salario,Departamento,)
datos_cat_cat<-datos_cat %>% select(churn,Ultima_Evaluacion_cat,Numero_proyectos,Satisfaccion_cat,Horas_promedio_mes,Salario,Departamento)
datos_gan <- MCA(datos_cat_cat,  graph = FALSE)
datos_gan
fviz_mca_var(datos_gan, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
fviz_mca_var(datos_gan, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, # Avoid text overlapping
ggtheme = theme_minimal())
fviz_mca_biplot(datos_gan,invisible = "ind",repel = TRUE)
fviz_mca_var(datos_gan, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
datos_cat_cat<-datos_cat %>% select(churn,Ultima_Evaluacion_cat,Numero_proyectos,Satisfaccion_cat,Horas_promedio_mes,Salario)
datos_gan <- MCA(datos_cat_cat,  graph = FALSE)
fviz_mca_var(datos_gan, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, # Avoid text overlapping
ggtheme = theme_minimal())
fviz_mca_var(datos_gan, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, # Avoid text overlapping
#ggtheme = theme_minimal())
)
knitr::opts_chunk$set(echo = TRUE)
library(gplots)
library(FactoMineR)  #Analisis de correspondencia
library(factoextra)
library(tidyverse)
library(gmodels)
library(sjPlot) # tabla cruzada
library(corrplot)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(gplots)
library(FactoMineR)  #Analisis de correspondencia
library(factoextra)
library(tidyverse)
library(gmodels)
library(sjPlot) # tabla cruzada
library(corrplot)
datos<- readxl::read_excel(file.choose())
datos
summary(datos)
r1<- readxl::read_excel(file.choose(),sheet = 'R1')
r2<- readxl::read_excel(file.choose(),sheet = 'R2')
r3<- readxl::read_excel(file.choose(),sheet = 'R3')
r4<- readxl::read_excel(file.choose(),sheet = 'R4')
knitr::opts_chunk$set(echo = TRUE)
library(gplots)
library(FactoMineR)  #Analisis de correspondencia
library(factoextra)
library(tidyverse)
library(gmodels)
library(sjPlot) # tabla cruzada
library(corrplot)
library(ExPanDaR)
library(DataExplorer)
## Create report
## Create report
create_report(r1)
create_report(r2)
create_report(r3)
create_report(r4)
View(datos)
View(r1)
View(r1)
View(r1)
View(r2)
View(r3)
View(r4)
r1
r1 %>% summarise('mean_x'=mean(X),'mean_y'=mean(y))
View(r1)
r1 %>% summarise('mean_x'=mean(X),'mean_y'=mean(Y))
r1 %>% summarise('mean_x'=mean(X),'mean_y'=mean(Y),'mean_x'=median(X),'mean_y'=median(Y))
r1 %>% summarise('mean_x'=mean(X),'mean_y'=mean(Y),'median_x'=median(X),'median_y'=median(Y))
r1 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_histogram()
r1 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point()
ggpubr::ggarrange(g1,g2,g3,g4)
g1<-r1 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point()
g2<-r2 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point()
g3<-r3 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point()
g4<-r4 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point()
ggpubr::ggarrange(g1,g2,g3,g4)
g1<-r1 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point() + labs(title='R1')
g1<-r1 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point() + labs(title='R1')
g2<-r2 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point() + labs(title='R2')
g3<-r3 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point() + labs(title='R3')
g4<-r4 %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point() + labs(title='R4')
ggpubr::ggarrange(g1,g2,g3,g4)
summary(r1)
summary(r2)
summary(r2)
summary(r3)
summary(r2)
summary(r4)
summary(r2)
summary(r3)
summary(r2)
summary(r3)
summary(r2)
completo<- bind_rows(r1 %>% mutate(lab='r1'),r2 %>% mutate(lab='r2'))
completo<- bind_rows(r1 %>% mutate(lab='r1'),r2 %>% mutate(lab='r2'),r3 %>% mutate(lab='r3'),r4 %>% mutate(lab='r4'))
completo %>% geom_boxplot(X,lab)
completo
completo %>% geom_boxplot(X)
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot()
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'y)
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'y')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'x')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'y')
yy<-completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_boxplot(,orientation = 'y') + labs('Y')
ggpubr::ggarrange(equis,yy)
equis<-completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'y') + labs('X')
yy<-completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_boxplot(,orientation = 'y') + labs('Y')
ggpubr::ggarrange(equis,yy)
ggpubr::ggarrange(equis,yy, nrow = 2)
equis<-completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'y') + labs(title='X')
yy<-completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_boxplot(,orientation = 'y') + labs(title='Y')
ggpubr::ggarrange(equis,yy, nrow = 2,)
equis<-completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot(,orientation = 'y') + labs(title='X')
yy<-completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_boxplot(,orientation = 'y') + labs(title='Y')
ggpubr::ggarrange(equis,yy, nrow = 2)
completo
completo %>% ggplot(mapping=aes(x=X,y=Y, fill=lab)) + geom_point() + facet_grid(rows = vars('lab'))
completo %>% ggplot(mapping=aes(x=X,y=Y, fill=lab)) + geom_point() + facet_wrap(~lab)
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point() + facet_wrap(~lab)
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_density() + facet_wrap(~lab)
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_density() + facet_wrap(~lab) + labs(title='Y')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot() + facet_wrap(~lab) + labs(title='X')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot() + facet_wrap(~lab,nrow = 4) + labs(title='Y')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot() + facet_wrap(~lab,nrow = 4) + labs(title='X')
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point() + facet_wrap(~lab)
completo %>% ggplot(mapping=aes(x=X,y=Y)) + geom_point()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point()
View(r1)
View(datos)
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point() + facet_wrap(~lab)
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point() + facet_wrap(~lab)
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point()
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_density() + facet_wrap(~lab) + labs(title='X')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_density() + facet_wrap(~lab) + labs(title='Y')
completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_density() + facet_wrap(~lab) + labs(title='Y')
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot() + facet_wrap(~lab,nrow = 4) + labs(title='X')
completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_boxplot() + facet_wrap(~lab,nrow = 4) + labs(title='Y')
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_fivethirtyeight()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_economist_white()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_gdocs()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_map()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_solarized()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_tufte()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_wsj()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point(alpha=0.5) + ggthemes::theme_clean()
completo %>% ggplot(mapping=aes(x=X,y=Y, color=lab)) + geom_point() + facet_wrap(~lab) + ggthemes::theme_clean()
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_density() + facet_wrap(~lab) + labs(title='X') + ggthemes::theme_clean()
completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_density() + facet_wrap(~lab) + labs(title='Y') + ggthemes::theme_clean()
completo %>% ggplot(mapping=aes(x=X,fill=lab)) + geom_boxplot() + facet_wrap(~lab,nrow = 4) + labs(title='X') + ggthemes::theme_clean()
completo %>% ggplot(mapping=aes(x=Y,fill=lab)) + geom_boxplot() + facet_wrap(~lab,nrow = 4) + labs(title='Y') + ggthemes::theme_clean()
View(r2)
r2 %>% group_by(Y) %>% summarise(n())
completo %>% ggplot(mapping = aes(x=X,y=Y)) +geom_density2d()
completo %>% ggplot(mapping = aes(x=X,y=Y, color=lab)) +geom_density2d()
completo %>% ggplot(mapping = aes(x=X,y=Y, color=lab)) +geom_density2d() + theme_clean()
completo %>% ggplot(mapping = aes(x=X,y=Y, color=lab)) +geom_density2d() + ggtheme::theme_clean()
completo %>% ggplot(mapping = aes(x=X,y=Y, color=lab)) +geom_density2d() + ggthemes::::theme_clean()
completo %>% ggplot(mapping = aes(x=X,y=Y, color=lab)) +geom_density2d() + ggthemes::theme_clean()
completo %>% ggplot(mapping = aes(x=X,y=Y, color=lab, fill='lab')) +geom_density2d() + ggthemes::theme_clean()
q()
rm( list=ls() )
#Feature Engineering
#creo nuevas variables dentro del mismo mes
#Condimentar a gusto con nuevas variables
#limpio la memoria
rm( list=ls() )
gc()
require("data.table")
#Establezco el Working Directory
setwd('/Users/achain/Documents/github/labo/propio')
EnriquecerDataset <- function( dataset , arch_destino )
{
columnas_originales <-  copy(colnames( dataset ))
#INICIO de la seccion donde se deben hacer cambios con variables nuevas
#se crean los nuevos campos para MasterCard  y Visa, teniendo en cuenta los NA's
#varias formas de combinar Visa_status y Master_status
dataset[ , mv_status01       := pmax( Master_status,  Visa_status, na.rm = TRUE) ]
dataset[ , mv_status02       := Master_status +  Visa_status ]
dataset[ , mv_status03       := pmax( ifelse( is.na(Master_status), 10, Master_status) , ifelse( is.na(Visa_status), 10, Visa_status) ) ]
dataset[ , mv_status04       := ifelse( is.na(Master_status), 10, Master_status)  +  ifelse( is.na(Visa_status), 10, Visa_status)  ]
dataset[ , mv_status05       := ifelse( is.na(Master_status), 10, Master_status)  +  100*ifelse( is.na(Visa_status), 10, Visa_status)  ]
dataset[ , mv_status06       := ifelse( is.na(Visa_status),
ifelse( is.na(Master_status), 10, Master_status),
Visa_status)  ]
dataset[ , mv_status07       := ifelse( is.na(Master_status),
ifelse( is.na(Visa_status), 10, Visa_status),
Master_status)  ]
#combino MasterCard y Visa
dataset[ , mv_mfinanciacion_limite := rowSums( cbind( Master_mfinanciacion_limite,  Visa_mfinanciacion_limite) , na.rm=TRUE ) ]
dataset[ , mv_Fvencimiento         := pmin( Master_Fvencimiento, Visa_Fvencimiento, na.rm = TRUE) ]
dataset[ , mv_Finiciomora          := pmin( Master_Finiciomora, Visa_Finiciomora, na.rm = TRUE) ]
dataset[ , mv_msaldototal          := rowSums( cbind( Master_msaldototal,  Visa_msaldototal) , na.rm=TRUE ) ]
dataset[ , mv_mconsumospesos       := rowSums( cbind( Master_mconsumospesos,  Visa_mconsumospesos) , na.rm=TRUE ) ]
dataset[ , mv_mconsumosdolares     := rowSums( cbind( Master_mconsumosdolares,  Visa_mconsumosdolares) , na.rm=TRUE ) ]
dataset[ , mv_mlimitecompra        := rowSums( cbind( Master_mlimitecompra,  Visa_mlimitecompra) , na.rm=TRUE ) ]
dataset[ , mv_mpagado              := rowSums( cbind( Master_mpagado,  Visa_mpagado) , na.rm=TRUE ) ]
dataset[ , mv_cconsumos            := rowSums( cbind( Master_cconsumos,  Visa_cconsumos) , na.rm=TRUE ) ]
dataset[ , mv_mpagominimo          := rowSums( cbind( Master_mpagominimo,  Visa_mpagominimo) , na.rm=TRUE ) ]
dataset[ , ratio_mrent          := ifelse(!is.na(mrentabilidad/mrentabilidad_annual),mrentabilidad/mrentabilidad_annual,0) ]
dataset[ , ratio_mrent          := ifelse(!is.na(mrentabilidad/mrentabilidad_annual ),mrentabilidad/mrentabilidad_annual ,0)]
dataset[ , margen_tasa          := mactivos_margen-mpasivos_margen ]
dataset[ , spread          := mactivos_margen-mpasivos_margen ]
dataset[ , ratio_tran_traj          := ifelse(!is.na(ctarjeta_debito_transacciones/ctarjeta_debito),ctarjeta_debito_transacciones/ctarjeta_debito,0) ]
dataset[ , ratio_pres_pers          := ifelse(!is.na(mprestamos_personales/cprestamos_personales),mprestamos_personales/cprestamos_personales,0 )]
dataset[ , ratio_pres_prend          := ifelse(!is.na(mprestamos_prendarios/cprestamos_prendarios),mprestamos_prendarios/cprestamos_prendarios,0 )]
dataset[ , ratio_pres_hipo        := ifelse(!is.na(mprestamos_hipotecarios/cprestamos_hipotecarios),mprestamos_hipotecarios/cprestamos_hipotecarios,0 )]
dataset[ , ratio_plazo_fijo       := ifelse(!is.na(rowSums( cbind( mplazo_fijo_dolares,  mplazo_fijo_pesos) , na.rm=TRUE )/cplazo_fijo), (rowSums( cbind( mplazo_fijo_dolares,  mplazo_fijo_pesos) , na.rm=TRUE )/cplazo_fijo),0)]
dataset[ , ratio_inv_1       := ifelse(!is.na(rowSums( cbind( minversion1_pesos,  minversion1_dolares) , na.rm=TRUE )/cinversion1), (rowSums( cbind( minversion1_pesos,  minversion1_dolares) , na.rm=TRUE )/cinversion1),0)]
dataset[ , ratio_inv_2       := ifelse(!is.na(minversion2/cinversion2),minversion2/cinversion2,0) ]
dataset[ , seguro_total       := rowSums( cbind( cseguro_vida,  cseguro_auto,cseguro_vivienda,cseguro_accidentes_personales) , na.rm=TRUE ) ]
dataset[ , payroll_total       := rowSums( cbind( mpayroll,  mpayroll2) , na.rm=TRUE ) ]
dataset[ , ratio_payroll_total       := ifelse(!is.na(rowSums( cbind( mpayroll,  mpayroll2) , na.rm=TRUE ) /rowSums( cbind( cpayroll_trx,  cpayroll2_trx) , na.rm=TRUE )), (rowSums( cbind( mpayroll,  mpayroll2) , na.rm=TRUE ) /rowSums( cbind( cpayroll_trx,  cpayroll2_trx) , na.rm=TRUE )),0)]
dataset[ , ratio_payroll_2       :=   ifelse(!is.na(mpayroll2/cpayroll2_trx),(mpayroll2/cpayroll2_trx),0)]
dataset[ , ratio_payroll       :=   ifelse(!is.na(mpayroll/cpayroll_trx),mpayroll/cpayroll_trx,0)]
dataset[ , ratio_buy_sel_forex      :=   ifelse(!is.na(mforex_buy/mforex_sell),(mforex_buy/mforex_sell),0)]
dataset[ , ratio_buy_forex      :=   ifelse(!is.na(mforex_buy/cforex_buy),(mforex_buy/cforex_buy),0)]
dataset[ , ratio_sel_forex      :=   ifelse(!is.na(mforex_sell/cforex_sell),(mforex_sell/cforex_sell),0)]
dataset[ , debito_anti      :=   ifelse(!is.na(rowSums( cbind( ccuenta_debitos_automaticos,  ctarjeta_visa_debitos_automaticos,ctarjeta_master_debitos_automaticos) , na.rm=TRUE )*cliente_antiguedad),(rowSums( cbind( ccuenta_debitos_automaticos,  ctarjeta_visa_debitos_automaticos,ctarjeta_master_debitos_automaticos) , na.rm=TRUE )*cliente_antiguedad),0)]
dataset[ , mv_monto_utilizado := mv_mlimitecompra - mv_mpagado ]
dataset[ , ratio_tr_reci      :=   ifelse(!is.na(mtransferencias_recibidas/ctransferencias_recibidas),(mtransferencias_recibidas/ctransferencias_recibidas),0)]
dataset[ , ratio_tr_emi      :=   ifelse(!is.na(mtransferencias_emitidas/ctransferencias_emitidas),(mtransferencias_emitidas/ctransferencias_emitidas),0)]
dataset[ , ratio_ext_autos      :=   ifelse(!is.na(mextraccion_autoservicio/cextraccion_autoservicio),(mextraccion_autoservicio/cextraccion_autoservicio),0)]
dataset[ , ratio_cheq_dep      :=   ifelse(!is.na(mcheques_depositados/ccheques_depositados),(mcheques_depositados/ccheques_depositados),0)]
dataset[ , ratio_cheq_emi      :=   ifelse(!is.na(mcheques_emitidos/ccheques_emitidos),(mcheques_emitidos/ccheques_emitidos),0)]
dataset[ , ratio_cheq_dep_re      :=   ifelse(!is.na(mcheques_depositados_rechazados/ccheques_depositados_rechazados),(mcheques_depositados_rechazados/ccheques_depositados_rechazados),0)]
dataset[ , ratio_cheq_emi_re      :=   ifelse(!is.na(mcheques_emitidos_rechazados/ccheques_emitidos_rechazados),(mcheques_emitidos_rechazados/ccheques_emitidos_rechazados),0)]
dataset[ , ratio_cheq_dep_rech      :=   ifelse(!is.na(mcheques_depositados_rechazados/mcheques_depositados),(mcheques_depositados_rechazados/mcheques_depositados),0)]
dataset[ , ratio_cheq_emi_rech      :=   ifelse(!is.na(mcheques_emitidos_rechazados/mcheques_emitidos),(mcheques_emitidos_rechazados/mcheques_emitidos),0)]
dataset[ , ratio_catm      :=   ifelse(!is.na(matm/catm_trx),(matm/catm_trx),0)]
dataset[ , ratio_catm_oth      :=   ifelse(!is.na(matm_other/catm_trx_other),(matm_other/catm_trx_other),0)]
dataset[ , ratio_catm_or_oth      :=   ifelse(!is.na(matm/matm_other),(matm/matm_other),0)]
columnas_extendidas <-  copy( setdiff(  colnames(dataset), columnas_originales ) )
#grabo con nombre extendido
fwrite( dataset,
file=arch_destino,
sep= "," )
}
#------------------------------------------------------------------------------
#kcarpeta_datasets    <- "../input/laboratorio-de-implementacion-i-2021/"   #KAGGLE
#kcarpeta_datasets    <- "./buckets/b1/datasets/"                          #VM o Ubuntu
kcarpeta_datasets    <- "./datasets/"                          #VM o Ubuntu
#Archivo con datos etiquetados para entrenamiento
karchivo_entrada      <-  paste0(kcarpeta_datasets, "competencia1_2022.csv")
karchivo_salida      <-  paste0(kcarpeta_datasets, "competencia1_2022_FE.csv")
#lectura rapida del dataset  usando fread  de la libreria  data.table
dataset1  <- fread(karchivo_entrada)
EnriquecerDataset( dataset1, karchivo_salida )
quit( save="no")
